#Â©2016-2017 EdgeVerve Systems Limited (a fully owned Infosys subsidiary),Bangalore, India. All Rights Reserved.

- name: Removing all services
  shell: "docker service rm $(docker service ls -q)"
  ignore_errors: yes
  
- name: Removing all containers
  shell: "docker rm -f $(docker ps -qa)"
  ignore_errors: yes

- name: Removing all images
  shell: "docker rmi -f $(docker images -qa)"
  ignore_errors: yes
  
- name: Removing all network
  shell: "docker network rm $(docker network ls -f type=custom -q)"
  ignore_errors: yes

- name: Removing all volume
  shell: "docker volume rm $(docker volume ls -q)"
  ignore_errors: yes

- name: stop docker daemon
  shell: "systemctl stop docker"
  ignore_errors: yes

- name: get docker daemon pid
  shell: "pgrep -f dockerd"
  register: docker_pid
  ignore_errors: yes

- name: Kill docker daemon
  shell: "kill -9 {{ docker_pid.stdout }}"
  ignore_errors: yes


- name: Remove docker yum repository
  yum_repository:
    name: docker
    state: absent

- name: Uninstall yum packages
  yum: name={{item.name}} state=absent
  with_items:
    - { name: 'epel-release' }
    - { name: 'docker-ce' }    


- name: Unmount netns /run/docker folder
  shell: umount -lR /run/docker/netns/* /run/docker/netns/
  ignore_errors: yes
  
- name: Unmount cep folder if mounted
  shell: umount -lR {{cepfolder}}/cep/ {{cepfolder}}/cep/*
  when: directLVMstorage == True or directLVMstorage == "yes"
  ignore_errors: yes
  
- name: Unmount /var/lib/docker folder if mounted
  shell: umount -lR /var/lib/docker/* /var/lib/docker/devicemapper/mnt/* /var/lib/docker/ 
  ignore_errors: yes
  
- name: Unmount NFS share folder
  mount:
    path: "{{cepfolder}}/cep-data" 
    src: "{{  hostvars[groups['NFSServer'][0]]['inventory_hostname'] }}:{{nfsSharePath}}" 
    fstype: nfs4
    opts: nofail,auto,noatime,rw,user 
    state: unmounted
  ignore_errors: yes

- name: Kill cAdvisor process
  service: name=cadvisor state=stopped enabled=no
  ignore_errors: yes
  
- name: remove cadvisor service file
  file: path=/usr/lib/systemd/system/cadvisor.service state=absent 
    
- name: Remove conf,certs,cep,docker data folder
  file: path={{item.path}} state=absent
  with_items:
    - { path: '/etc/docker' }
    - { path: '/var/lib/docker/network' }
    - { path: '/etc/systemd/system/docker.service.d' }
    - { path: '/run/docker' }
    - { path: '/var/lib/docker' }
    - { path: '{{cepfolder}}/cep' }
    
- name: remove logical volume
  command: lvremove -y {{docker_storage_vg}}/docker-pool
  when: directLVMstorage == True or directLVMstorage == "yes"
  ignore_errors: yes
  
- name: remove datadisk logical volume
  shell: "(fdisk -l) &&  (lvremove -y {{docker_storage_vg}}/datadisk)"
  when: directLVMstorage == True or directLVMstorage == "yes"
  ignore_errors: yes
  
  
- name: remove volume group
  command: vgremove {{docker_storage_vg}}
  when: directLVMstorage == True or directLVMstorage == "yes"
  ignore_errors: yes

- name: mounting datadisk 
  mount:
    path: "{{cepfolder}}/cep" 
    src: "/dev/{{docker_storage_vg}}/{{docker_storage_datadisk_name}}" 
    fstype: ext4
    opts: nofail,auto,noatime,rw,user,exec
    state: absent
  when: directLVMstorage == True or directLVMstorage == "yes"

- name: Removing mounting volume at startup (fstab entry)
  lineinfile: 
    line: "/dev/{{docker_storage_vg}}/{{docker_storage_datadisk_name}} {{cepfolder}}/cep ext4  nofail,auto,noatime,rw,user,exec    0   0"
    path: /etc/fstab
    state: absent
  ignore_errors: yes
  
- name: Remove crontab entry for cleanup
  lineinfile:
    line: "{{cleanup_cron_timing}} {{cleanup_cron_user}} {{cepfolder}}/cep/cleanup-cron-script/cleanup.sh"
    path: "{{crontab_file}}"
    state: absent
  
- name: remove docker-storage config  
  file: path=/etc/sysconfig/docker-storage state=absent
  when: directLVMstorage == True or directLVMstorage == "yes"
  ignore_errors: yes
  
- name: Disable ports & SSL port in firewalld
  firewalld: port={{item.port}} permanent=true state=disabled
  with_items:
    - { port: 80/tcp }
    - { port: 443/tcp }
    - { port: 2375/tcp }
    - { port: 2377/tcp }
    - { port: 7946/tcp }
    - { port: 7946/udp }
    - { port: 4789/tcp }
    - { port: 4789/udp }
    - { port: 9323/tcp }
    - { port: 8080/tcp }
    - { port: 12201/udp }

- name: Disable ports & SSL port in firewalld
  firewalld: port={{item.port}} permanent=true state=disabled
  with_items:
    - { port: 4500/tcp } #dtr https port
    - { port: 4501/tcp } #dtr http port
    - { port: 4433/tcp } #ucp port #1
    - { port: 12379/tcp } #ucp port #2
    - { port: 12383/tcp } #ucp port #3
    - { port: 12382/tcp } #ucp port #4
    - { port: 12376/tcp } #ucp port #5
    - { port: 12381/tcp } #ucp port #6
    - { port: 12387/tcp } #ucp port #7
    - { port: 12380/tcp } #ucp port #8
    - { port: 12384/tcp } #ucp port #9
    - { port: 12386/tcp } #ucp port #10
    - { port: 12385/tcp } #ucp port #11
  when: docker_ee_subscription != ""
 
    
- name: Remove docker0 interface as trusted zone in firewalld
  firewalld: zone=trusted interface=docker0 permanent=true state=disabled

- name: restart firewalld
  command: firewall-cmd --reload
