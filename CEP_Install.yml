#Â©2016-2017 EdgeVerve Systems Limited (a fully owned Infosys subsidiary),Bangalore, India. All Rights Reserved.

    
#Get inputs from users to setup CEP
- hosts: 
  - localhost
  tags:
    - variable_setup
  roles:
    - variable_setup

#Include variable
- hosts: 
  - all
  tags:
    - variable_setup
  tasks:
    - name: Include variables
      include_vars: group_vars/all

#Checking for pre-requisites
- hosts:
  - AllHosts
  tags:
    - pre_check
  roles:
    - pre_check

#Generate certificates
- hosts:
  - localhost
  tags:
    - cert_gen
  roles:
    - cert_generation

#Setup NFSServer if provided
- hosts:
  - NFSServer
  tags:
    - nfs_server_setup
  roles:
    - { role: setup_NFS, when: setupNFS == True or setupNFS == "yes"}
        
#Install Docker engine in all machines
- hosts:
  - AllHosts
  
  roles:
    - { role: docker_storage, tags: [ 'docker_storage' ] }
    - { role: certs, tags: [ 'cert_setup' ] }
    - { role: install_docker, tags: [ 'install_docker' ] }
    - app_config_setup
    - { role: setup_cleanup_cron, tags: [ 'setup_cleanup_cron' ] , when: cleanup_cron_enable == True or cleanup_cron_enable == "yes"}
    - { role: cadvisor, tags: [ 'cadvisor','monitoring' ] ,when: installmonitor == True or installmonitor == "yes"}
    
#Determine swarm status for manager
- hosts:
  - manager
  tags:
    - swarm_setup
    - router
    - private_registry
    - cep_portal
    - gitlab
    - graylog
    - monitoring
    - auto-scaling
  roles:
    - swarm_master_check
    
#Determine swarm status for worker
- hosts:
  - worker
  tags:
    - swarm_setup
  roles:
    - swarm_worker_check

- hosts:
  - localhost    

  roles:
    - { role: swarm_master_list, tags: ['swarm_setup','router','private_registry','cep_portal','gitlab','graylog','monitoring','auto-scaling'] }
    - { role: swarm_worker_list, tags: ['swarm_setup'] }
    
#Initiate swarm if not already present
- hosts:
  - swarm_manager_bootstrap[0]
  tags:
    - swarm_setup
  roles:
    - swarm_master_init

#Retrieve swarm token
- hosts: 
  - swarm_manager_operational[0]
  tags:
    - swarm_setup
  roles:
    - swarm_retrieve_token
      
#Join swarm_masters
- hosts:
    - swarm_manager_bootstrap:!swarm_manager_operational
  tags:
    - swarm_setup  
  roles:
    - swarm_master_join

#Join swarm workers
- hosts:
    - swarm_worker_bootstrap:!swarm_manager_bootstrap
  tags:
    - swarm_setup
  roles:
    - swarm_worker_join

#Create services
- hosts:
    - swarm_manager_operational[0]
  roles:
    - { role: router, tags: [ 'router' ]}
    - { role: private_registry, tags: [ 'private_registry' ]}
    - { role: cep_portal, tags: [ 'cep_portal' ] , when: installcepui == True or installcepui == "yes"}
    - { role: gitlab, tags: [ 'gitlab' ] , when: installgitlab == True or installgitlab == "yes"}
    - { role: graylog, tags: [ 'graylog' ] , when: installgraylog == True or installgraylog == "yes"}
    - { role: monitoring, tags: [ 'monitoring' ] , when: installmonitor == True or installmonitor == "yes"}
    - { role: auto-scaling, tags: [ 'auto-scaling' ] , when: installAutoScale == True or installAutoScale == "yes"}
